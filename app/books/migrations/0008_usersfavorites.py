# Generated by Django 5.1.1 on 2024-09-18 13:10

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("books", "0007_bookschapter_is_archived"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="UsersFavorites",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                (
                    "book",
                    models.ForeignKey(
                        help_text="The book associated with this record.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_libraries",
                        to="books.books",
                        verbose_name="Book",
                    ),
                ),
                (
                    "reader",
                    models.ForeignKey(
                        help_text="The user associated with this record.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="library_books",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Reader",
                    ),
                ),
            ],
            options={
                "verbose_name": "User's Favorites",
                "verbose_name_plural": "User's Favorites",
                "db_table": "users_favorites",
                "managed": True,
                "constraints": [
                    models.UniqueConstraint(
                        fields=("book", "reader"), name="unique_reader_book"
                    )
                ],
                "unique_together": {("book", "reader")},
            },
        ),
    ]
